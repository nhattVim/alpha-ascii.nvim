name: Generate README

on:
  push:
    paths:
      - "lua/alpha_ascii/**"
      - ".github/workflows/readme.yml"
      - ".github/readme/README.header.md"
      - ".github/readme/README.footer.md"
  workflow_dispatch:
    inputs:
      force_update:
        description: "Force update README even if nothing changed"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions:
  contents: write

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    env:
      README_FULL: .README.full.md
      PREVIEW_FILE: .github/readme/README.preview.md
      README_FULL_TEMP: .github/readme/README.full.md
      PREVIEW_FILE_TMP: .README.preview.md
      README_FILE: README.md
      HEADER_FILE: .github/readme/README.header.md
      FOOTER_FILE: .github/readme/README.footer.md
      GIF_FILE: screenshots/ascii_preview.gif

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Generate GIF from screenshots
        run: |
          if ls screenshots/*.png 1> /dev/null 2>&1; then
            convert \
              -delay 100 \
              -loop 0 \
              -dispose previous \
              -layers OptimizeTransparency \
              -quality 100 \
              -resize 100% \
              screenshots/*.png "$GIF_FILE"
          else
            echo "No PNG screenshots found."
          fi

      - name: Setup Lua
        uses: ljmf00/setup-lua@v1.0.0

      - name: Generate preview list with GIF
        run: |
          echo '## âœ¨ Preview' > "$PREVIEW_FILE_TMP"
          echo '' >> "$PREVIEW_FILE_TMP"
          echo '<div align="center">' >> "$PREVIEW_FILE_TMP"
          echo "  <img src=\"$GIF_FILE\" alt=\"ascii gif preview\"/>" >> "$PREVIEW_FILE_TMP"
          echo '</div>' >> "$PREVIEW_FILE_TMP"
          echo '' >> "$PREVIEW_FILE_TMP"

          echo '<details><summary>Show individual screenshots</summary>' >> "$PREVIEW_FILE_TMP"
          echo '' >> "$PREVIEW_FILE_TMP"
          echo '<div align="center">' >> "$PREVIEW_FILE_TMP"

          preview_files=$(ls screenshots/*.png | xargs -n1 basename | sed 's/\.png$//' | sort)

          i=0
          echo '  <table>' >> "$PREVIEW_FILE_TMP"
          for file in $preview_files; do
            if [ $((i % 3)) -eq 0 ]; then
              if [ $i -ne 0 ]; then
                echo '    </tr>' >> "$PREVIEW_FILE_TMP"
              fi
              echo '    <tr>' >> "$PREVIEW_FILE_TMP"
            fi
            echo "      <td align=\"center\"><img src=\"screenshots/${file}.png\"/><br/><sub><b>${file}</b></sub></td>" >> "$PREVIEW_FILE_TMP"
            i=$((i + 1))
          done
          echo '    </tr>' >> "$PREVIEW_FILE_TMP"
          echo '  </table>' >> "$PREVIEW_FILE_TMP"
          echo '</div>' >> "$PREVIEW_FILE_TMP"
          echo '</details>' >> "$PREVIEW_FILE_TMP"

      - name: Compare readme
        id: compare
        run: |
          {
            cat "$HEADER_FILE"
            echo ""
            cat "$PREVIEW_FILE_TMP"
            echo ""
            cat "$FOOTER_FILE"
          } > "$README_FULL_TEMP"

          if cmp -s "$README_FULL_TEMP" "$README_FULL"; then
            if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
              echo "Forced update"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "No change"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "README changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Finalize full README if changed or forced
        if: steps.compare.outputs.changed == 'true'
        run: |
          mv "$PREVIEW_FILE_TMP" "$PREVIEW_FILE"
          mv "$README_FULL_TEMP" "$README_FULL"

          {
            echo "<p align='right'><em>Last updated: $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')</em></p>"
            echo ""
            cat "$HEADER_FILE"
            echo ""
            cat "$PREVIEW_FILE"
            echo ""
            cat "$FOOTER_FILE"
          } > "$README_FILE"

      - name: Commit & Push if changed or forced
        if: steps.compare.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$README_FILE" "$README_FULL" "$PREVIEW_FILE" "$GIF_FILE"
          git commit \
            -m "chore(readme): ðŸ¤– Auto-generate README" \
            -m "Updated at: $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')"
          git push
