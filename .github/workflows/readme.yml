name: Generate README

on:
  push:
    paths:
      - "lua/alpha_ascii/**"
      - ".github/workflows/readme.yml"
      - ".github/readme/README.header.md"
      - ".github/readme/README.footer.md"
  workflow_dispatch:
    inputs:
      force_update:
        description: "Force update README even if nothing changed"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions:
  contents: write

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    env:
      README_FILE: README.md
      HEADER_FILE: .github/readme/README.header.md
      PREVIEW_FILE: .github/readme/README.preview.md
      FOOTER_FILE: .github/readme/README.footer.md
      PREVIEW_TMP: .README.preview.tmp.md
      README_BASE: .README.base.md
      README_NEW: .README.new.md
      GIF_FILE: screenshots/ascii_preview.gif

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Generate GIF from screenshots
        run: |
          if ls screenshots/*.png 1> /dev/null 2>&1; then
            convert \
              -delay 100 \
              -loop 0 \
              -dispose previous \
              -layers OptimizeTransparency \
              -quality 100 \
              -resize 100% \
              screenshots/*.png "$GIF_FILE"
          else
            echo "No PNG screenshots found."
          fi

      - name: Setup Lua (for downstream compatibility)
        uses: ljmf00/setup-lua@v1.0.0

      - name: Generate Preview Section (temporary)
        run: |
          {
            echo '## âœ¨ Preview'
            echo ''
            echo '<div align="center">'
            echo "  <img src=\"$GIF_FILE\" alt=\"ascii gif preview\"/>"
            echo '</div>'
            echo ''
            echo '<details><summary>Show individual screenshots</summary>'
            echo ''
            echo '<div align="center">'
            echo '  <table>'

            i=0
            for file in $(ls screenshots/*.png | xargs -n1 basename | sed 's/\.png$//' | sort); do
              if [ $((i % 3)) -eq 0 ]; then
                [ $i -ne 0 ] && echo '    </tr>'
                echo '    <tr>'
              fi
              echo "      <td align=\"center\"><img src=\"screenshots/${file}.png\"/><br/><sub><b>${file}</b></sub></td>"
              i=$((i + 1))
            done

            echo '    </tr>'
            echo '  </table>'
            echo '</div>'
            echo '</details>'
          } > "$PREVIEW_TMP"

      - name: Assemble Existing and New README Content (excluding timestamp)
        run: |
          {
            cat "$HEADER_FILE"
            echo ""
            cat "$PREVIEW_FILE"
            echo ""
            cat "$FOOTER_FILE"
          } > "$README_BASE"

          {
            cat "$HEADER_FILE"
            echo ""
            cat "$PREVIEW_TMP"
            echo ""
            cat "$FOOTER_FILE"
          } > "$README_NEW"

      - name: Compare README content (excluding timestamp)
        id: compare
        run: |
          if cmp -s "$README_BASE" "$README_NEW"; then
            if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
              echo "Forced update"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "No change detected"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "README content changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update README if content changed or forced
        if: steps.compare.outputs.changed == 'true'
        run: |
          mv "$PREVIEW_TMP" "$PREVIEW_FILE"

          {
            echo "<p align='right'><em>Last updated: $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')</em></p>"
            echo ""
            cat "$README_NEW"
          } > "$README_FILE"

      - name: Commit & Push changes
        if: steps.compare.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$README_FILE" "$PREVIEW_FILE" "$GIF_FILE"
          git commit \
            -m "chore(readme): ðŸ¤– Auto-generate README" \
            -m "Updated at: $(date -u -d '+7 hour' '+%Y-%m-%d %H:%M UTC+7')"
          git pull --rebase origin "$(git rev-parse --abbrev-ref HEAD)"
          git push

      - name: Cleanup temp files
        if: always()
        run: rm -f "$README_BASE" "$README_NEW" "$PREVIEW_TMP"
